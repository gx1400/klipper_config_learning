# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
#canbus_uuid: f8fb47f3b2b3
canbus_uuid: faa4005b8e8d

## TEMPERATURE SENSOR OVER THE CANBOARD
[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 22.452161589 # calibrated 2023-07-16
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree

nozzle_diameter: 0.400
filament_diameter: 1.750
instantaneous_corner_velocity: 1.5
max_extrude_cross_section: 0.8
pressure_advance: 0.04

heater_pin: EBBCan: PB13
pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
#pid_Kp: 29.288
#pid_Ki: 1.992
#pid_Kd: 107.634
min_temp: 0
max_temp: 300

max_extrude_only_distance: 101
min_extrude_temp: 0

sensor_type:MAX31865
sensor_pin: EBBCan: PA4
#spi_bus: spi1
spi_software_miso_pin: EBBCan:PA6
spi_software_mosi_pin: EBBCan:PA7
spi_software_sclk_pin: EBBCan:PA5
spi_speed: 1000000
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
#heater_temp: 25
heater_temp: 50

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

[neopixel hotend_rgb]
pin: EBBCan:PD3
chain_count: 3
color_order: GRBW

#[bltouch]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan: PC13
[probe]
pin: EBBCan: PB5
x_offset: 0
y_offset: 0
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#[output_pin PB5]
#pin: EBBCan: PB5

#[output_pin PB7]
#pin: EBBCan: PB7

#[output_pin PB6]
#pin: EBBCan: PB6
